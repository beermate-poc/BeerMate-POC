# This is a basic workflow to help you deploy to a Salesforce environment

name: Deploy to TEST

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the specified branches
on:
  workflow_dispatch:
  push:
    branches: 
      - TEST

# Granting write permission to the pipeline. 
# Required for pushing tags or committing.
permissions: write-all

# A workflow which firstly runs the static resource builder, followed by the deployment itself  
jobs:
  BuildStaticResources:
  # The deploy_scripts/Compiler.xml and deploy_scripts/minimalize.bat files have to be updated
  # with the new src path: e.g., D:\a\repositoryName\repositoryName\ instead of d:\a\1\s\ !
    runs-on: windows-latest
    steps:
    - name: Checkout the source branch
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
    - name: Building static resources
      run: |
          echo "${PWD##*/}"
          ls
          cd deploy_scripts
          ant prepareStaticResourcesZip 

    - name: Commit the built static resources
      run: |
          mkdir -force force-app/main/default/staticresources
          cp src/staticresources/*.resource* force-app/main/default/staticresources
          git config user.email "automated@process"
          git config user.name "Automated Process"
          git add force-app/main/default/staticresources
          git commit -m 'Commit the B2B built static resources'
          git push ${{secrets.repository}}
      # Adding -force in mkdir to avoid errors in the folder already exists 

  Deploy:
    needs: BuildStaticResources
    runs-on: ubuntu-latest
    container: dxatscale/sfpowerscripts:release-feb22
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: SFDX Version
        run: |
          sfdx --version

      - name: Checkout the source branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

#       - name: 'Install sfdx-cli & delta plugins'
#         run: |
#           npm install sfdx-cli --global
#           echo 'y' | npx sfdx plugins:install sfpowerkit

      - name: Delta package
        run: |
          git rev-parse --abbrev-ref HEAD
          LATEST_STABLE_TAG=`git tag -l TEST/v*  --sort=creatordate | tail -n1`
          echo The last stable tag is $LATEST_STABLE_TAG
          CURRENT_COMMIT_ID=`git rev-parse --verify HEAD`
          echo The current commit ID is $CURRENT_COMMIT_ID
          npx sfdx sfpowerkit:project:diff -t $CURRENT_COMMIT_ID -r $LATEST_STABLE_TAG -d delta -x

          mkdir -p delta/convertmdapi
          mkdir -p delta/force-app
          cp destructiveChanges/destructiveChangesPre.xml destructiveChanges/destructiveChangesPost.xml destructiveChanges/package.xml delta/convertmdapi/
          cd delta/
          sfdx force:source:convert -r force-app -d convertmdapi
          cd ..
          cd delta/convertmdapi
          echo =================================================================================
          echo ===================== The structure of convertmdapi folder ====================== 
          echo =================================================================================    
          ls -d $PWD/*
          cd ..
          cd ..

      - name: Deploy to target org
        run: |
          echo 
          echo =================================================================================
          echo ========================== Destructive Changes Pre ============================== 
          echo =================================================================================
          cat delta/convertmdapi/destructiveChangesPre.xml
          echo
          echo =================================================================================
          echo ========================== Main Deployment Package ============================== 
          echo =================================================================================
          cat delta/convertmdapi/package.xml
          echo =================================================================================
          echo ========================== Destructive Changes Post ============================= 
          echo =================================================================================
          cat delta/convertmdapi/destructiveChangesPost.xml
          sfdx force:auth:jwt:grant --clientid ${{secrets.TEST_CLIENTID}} --jwtkeyfile ./.github/server.key --username ${{secrets.TEST_USERNAME}} --instanceurl ${{secrets.TEST_ORG_URL}}
          sfdx force:mdapi:deploy -d delta/convertmdapi -l ${{secrets.NOTESTRUN}} -u ${{secrets.TEST_USERNAME}} --ignorewarnings -w 60

      - name: Add new tag
        run: |
          current_version=`git tag -l TEST/v* --sort=creatordate | tail -n1 | awk -F'v' '{print $NF}'`
          echo CURRENT VERSION: TEST/v$current_version
          major=`echo $current_version | cut -d'.' -f 1`
          major=`expr $major + 1`
          next_version=`echo $major`
          echo NEXT VERSION: TEST/v$next_version
          git tag `echo TEST/v$next_version`
          git push ${{secrets.repository}} --tags

      # - name: Retrieve the code coverage
      #   run:
      #     sfdx force:apex:test:run --codecoverage --resultformat human -u ${{secrets.TEST_USERNAME}}
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.office365.com
          # Required mail server port:
          server_port: 587
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: ${{ github.ref }} pipeline status
          # Required recipients' addresses:
          to: mamatha.dhanoji@molsoncoors.com,adrian.ioana@molsoncoors.com
          # Required sender full name (address can be skipped):
          from: GITHUB Workflow # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          # secure: true
          # Optional plain body:
          body: Build job of ${{ github.ref }} pipeline completed successfully!
          # Optional HTML body read from file:
          # html_body: file://README.html
          # Optional carbon copy recipients:
          # cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          # bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          # reply_to: luke@example.com
          # Optional Message ID this message is replying to:
          # in_reply_to: <random-luke@example.com>
          # Optional unsigned/invalid certificates allowance:
          # ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          # convert_markdown: true
          # Optional attachments:
          # attachments: attachments.zip,git.diff,./dist/static/*.js
          # Optional priority: 'high', 'normal' (default) or 'low'
          # priority: low