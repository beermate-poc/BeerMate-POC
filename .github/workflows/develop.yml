# ============================================================================================================
# ============================================================================================================
# This is a basic workflow to help you deploy to a Salesforce environment
# Created by Adrian Ioana using bash scripting, sfdx-cli, sfpowerscripts, Node, GitHub Actions
# Last modified date 10th May 2022

### Prerequisites:
 ## Add the environment variables defined below, in GitHub - Settings - Secrets - Actions - Repository secrets
 ## The deploy_scripts/Compiler.xml and deploy_scripts/minimalize.bat have to be updated
  # with the new src path: e.g., D:\a\repositoryName\repositoryName\ instead of d:\a\1\s\ !

### Variables
 ## TAG - Deployment tag attached to a commit
 ## CLIENTID - DevOps conneected app consumer key
 ## USERNAME - Target org username
 ## TESTLEVEL - Can have one of the following values
  # NOTESTRUN
  # RUNLOCALTESTS
  # RUNSPECIFIEDTESTS -r class1.method1,class1.method2,class2.method1,etc
 ## URL - Target org login URL; test.salesforce.com, login.salesforce.com or custom domain
  # TEST_ORG_URL - https://test.salesforce.com
  # PROD_ORG_URL - https://login.salesforce.com
  # CUSTOM_ORG_URL - to be defined based on your needs
 ## SERVER_KEY - Certificate value that identifies with the DevOps app digital certificate server.crt
 ## REPOSITORY - A combination of username, personal access token and repository URL
# ============================================================================================================
# ============================================================================================================


name: Deploy-to-DEVINT

on:
  workflow_dispatch:
  push:
    paths:
        - 'force-app/**'
        - 'destructiveChanges/**'
        - 'src/**'
        - '!.github/**'
        - '!deploy_scripts/**'
    branches: 
      - develop

env: # Sets environment variables 
  TAG:        DEVINT/v                     # Environment specific; To be updated for each environment;
  CLIENTID:   ${{secrets.DEVINT_CLIENTID}} # Environment specific; To be updated for each environment;
  USERNAME:   ${{secrets.DEVINT_USERNAME}} # Environment specific; To be updated for each environment;
  TESTLEVEL:  ${{secrets.NOTESTRUN}}       # Environment specific; To be updated for each environment;
  URL:        ${{secrets.TEST_ORG_URL}}    # Environment specific; To be updated for Production;
  SERVER_KEY: ${{secrets.SERVER_KEY}}      # No update required
  REPOSITORY: ${{secrets.REPOSITORY}}      # No update required

# A workflow which firstly runs the static resource builder, followed by the deployment itself  
jobs:
  staticResources:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}

    - name: Build static resources
      run: |
          echo "${PWD##*/}"
          ls
          cd deploy_scripts
          ant prepareStaticResourcesZip
          cd ..
          mkdir -force force-app/main/default/staticresources
          cp src/staticresources/*.resource* force-app/main/default/staticresources
          git config user.email "automated@process"
          git config user.name "Automated Process"
          git add force-app/main/default/staticresources
          git commit -m 'Commit the B2B built static resources'
          git push $REPOSITORY

  deploy:
    needs: staticResources
    runs-on: ubuntu-latest
    # container: salesforce/salesforcedx:latest-rc-slim
    container: dxatscale/sfpowerscripts:release-feb22
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Deploy
        run: |
          chmod +x "${GITHUB_WORKSPACE}/.github/deploy.sh"
          "${GITHUB_WORKSPACE}/.github/deploy.sh"

      # - name: Retrieve the code coverage
      #   run:
      #     sfdx force:apex:test:run --codecoverage --resultformat human -u ${{secrets.DEVINT_USERNAME}}
      
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.office365.com
          # Required mail server port:
          server_port: 587
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: ${{ github.ref }} pipeline status
          # Required recipients' addresses:
          to: mamatha.dhanoji@molsoncoors.com,adrian.ioana@molsoncoors.com
          # Required sender full name (address can be skipped):
          from: GITHUB Workflow # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          # secure: true
          # Optional plain body:
          body: Build job of ${{ github.ref }} pipeline completed successfully!
          # Optional HTML body read from file:
          # html_body: file://README.html
          # Optional carbon copy recipients:
          # cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          # bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          # reply_to: luke@example.com
          # Optional Message ID this message is replying to:
          # in_reply_to: <random-luke@example.com>
          # Optional unsigned/invalid certificates allowance:
          # ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          # convert_markdown: true
          # Optional attachments:
          # attachments: attachments.zip,git.diff,./dist/static/*.js
          # Optional priority: 'high', 'normal' (default) or 'low'
          # priority: low


# ================================================================================
# ================================================================================
# sfpowerscripts  
# MIT License

# Copyright (c) 2020 Accenture

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# ================================================================================
# ================================================================================